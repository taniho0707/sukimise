services:
  postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_DB: sukimise
      POSTGRES_USER: sukimise_user
      POSTGRES_PASSWORD: sukimise_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sukimise_user -d sukimise"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: golang:1.23-alpine
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://sukimise_user:sukimise_password@postgres:5432/sukimise?sslmode=disable
      JWT_SECRET: your-jwt-secret-key
      PORT: 8080
      HOST: 0.0.0.0
      CGO_ENABLED: 0
      ADMIN_USERS: 'admin:$$2a$$10$$v2zOcygvW3kFIAWDVzsEeeQmTE0.dMWOtL7A1qr9eyRwTNMzWKdZG;admin2:$$2a$$10$$K8Zx9J5Qv3kFIAWDVzsEeeQmTE0.dMWOtL7A1qr9eyRwTNMzWKdZG'
      EDITOR_USERS: 'editor:$$2a$$10$$3dow5bs6VqqKAfYD2QwMieZYdLCime.DU5wTEccmtpTmopeo9upNC;editor2:$$2a$$10$$H7Yw8K4Pv2kFIAWDVzsEeeQmTE0.dMWOtL7A1qr9eyRwTNMzWKdZG'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - ./.env:/app/.env
    working_dir: /app
    command: sh -c "apk add --no-cache git && go mod download && go run cmd/server/main.go"

  frontend:
    image: node:18-alpine
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend

  discord-bot:
    image: golang:1.23-alpine
    ports:
      - "8082:8082"
    environment:
      DATABASE_URL: postgres://sukimise_user:sukimise_password@postgres:5432/sukimise?sslmode=disable
      SUKIMISE_API_URL: http://backend:8080
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      BOT_PORT: 8082
      CGO_ENABLED: 0
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./discord-bot:/app
    working_dir: /app
    command: sh -c "apk add --no-cache git && go mod download && go run cmd/main.go"

volumes:
  postgres_data:
  uploads_data:
